
# last update -> 18/04/2020

We can make POST requests to these urls to obtain specific functionalities. They will return HTTP status codes based on the result.
The JSON keys mentioned MUST be included in the body otherwise a NOT FOUND error code will be returned

----------------------------------------------- Products -----------------------------------------------
	
	* Adding Product to Database
		-> POST to http://localhost:8080/addProduct
		-> with JSON body with key(s): "productName", "price" and "description". Optional key "discount" can be included
		-> will return CONFLICT if a product with same name is already in DB, else OK
		
	* Adds a Review for a product, if a review is already present it will be updated
		-> POST to http://localhost:8080/addReview
		-> with JSON body with key(s): "productName", "username", "description" and "rating"
		-> will return NOT FOUND if product is not in database, else OK
		
	* Removes Product from Database
		-> POST to http://localhost:8080/removeProduct
		-> with JSON body with key(s): "productName"
		-> will return NOT_FOUND if the product is not found in DB, else OK
	
	* Update existing Product in Database
		-> POST to http://localhost:8080/updateProduct
		-> with JSON body with key(s): "productName" and "description". Optional key "discount" can be included
     	-> will return NOT_FOUND if no such Product in DB, else OK
		
	* find all product that contains given string in name
		-> POST to http://localhost:8080/searchProductsByName
		-> with JSON body with key(s): "productName".
		-> will return a JSON array of the matching products.
	
	* find all products that have a discount
		-> POST to http://localhost:8080/searchProductWithDiscount
		-> will return A JSON array of the matching products.
		
	* find all products that gave a rating greater than or equal to a value
		-> POST to http://localhost:8080/findProductsWithRatingGreaterThanAndEqual
		-> with JSON body with key(s): "rating".
		-> will return A JSON array of the matching products.
	
	
----------------------------------------------- Shopping Cart -----------------------------------------------	

	* Checks for product in database and then adds it to the user's Shopping Cart
		-> POST to http://localhost:8080/addToShoppingCart
		-> with JSON body with key(s): "username" and "productName" and optional key "quantity"
		-> will return NOT FOUND if product is not in database, else OK

	* Checks for product in database and then removes it from the user's Shopping Cart
		-> POST to http://localhost:8080/removeFromShoppingCart
		-> with JSON body with key(s): "username" and "productName"
		-> will return NOT FOUND if product is not in database or if user doesn't have a Shopping Cart, else OK
	
	
----------------------------------------------- Store Managers -----------------------------------------------	

	* Adds Store Manager to Database
		-> POST to http://localhost:8080/addStoreManager
		-> with JSON body with key(s): "username", "password".
		-> will return CONFLICT if a Store Manager with same name is already in DB, else OK

	* Changes Store Manager password in Database
		-> POST to http://localhost:8080/changeStoreManagerPassword
		-> with JSON body with key(s): "username", "oldPassword", "newPassword".
		-> will return CONFLICT if old password is incorrect, else OK

	* Removes Store Manager from Database
		-> POST to http://localhost:8080/removeStoreManager
		-> with JSON body with key(s): "username".
		-> will return NOT FOUND if the Store Manager is not in DB, else OK

----------------------------------------------- Wish List -----------------------------------------------	

	* Checks for product in database and then adds it to the user's wish list
		-> POST to http://localhost:8080/addToWishList
		-> with JSON body with key(s): "username" and "productName"
		-> will return NOT FOUND if product is not in database, else OK

	* Checks for product in database and then removes it from the user's wish list
		-> POST to http://localhost:8080/removeFromWishList
		-> with JSON body with key(s): "username" and "productName"
		-> @return NOT FOUND if product is not in database or if user doesn't have a wish list, else OK

	* Transfers a product from the wish list to the Shopping Cart
		-> POST to http://localhost:8080/moveToShoppingCart
		-> with JSON body with key(s): "username" and "productName"
		-> will return NOT FOUND if product is not in database or if user doesn't have a wish list, else OK
















	